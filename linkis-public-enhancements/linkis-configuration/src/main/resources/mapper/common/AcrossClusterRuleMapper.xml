<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~ 
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~ 
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.apache.linkis.configuration.dao.AcrossClusterRuleMapper">

    <resultMap id="acrossClusterRuleMap" type="org.apache.linkis.configuration.entity.AcrossClusterRule">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="clusterName" column="cluster_name" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" jdbcType="VARCHAR"/>
        <result property="user" column="user" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="rules" column="rules" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getAcrossClusterRule" resultMap="acrossClusterRuleMap">
        SELECT
            acr.id, acr.cluster_name, acr.creator,
            acr.user, acr.create_time, acr.create_by,
            acr.update_time, acr.update_by, acr.rules
        FROM
            `linkis_cg_lm_across_cluster_rule` acr
        WHERE
            creator = #{creator} AND user = #{user}
    </select>


    <insert id="insertAcrossClusterRule" flushCache="true" useGeneratedKeys="true" keyProperty="id"
            parameterType="org.apache.linkis.configuration.entity.AcrossClusterRule">
        INSERT INTO
            linkis_cg_lm_across_cluster_rule
        VALUES
            (#{acrossClusterRule.clusterName},#{acrossClusterRule.creator},#{acrossClusterRule.user},#{acrossClusterRule.createTime},
            #{acrossClusterRule.createBy},#{acrossClusterRule.updateTime},#{acrossClusterRule.updateBy},#{acrossClusterRule.rules})
    </insert>

    <delete id="deleteAcrossClusterRule">
        DELETE
        FROM
            `linkis_cg_lm_across_cluster_rule` acr
        WHERE
            acr.creator = #{creator} AND acr.user = #{user}
    </delete>

    <update id="updateAcrossClusterRule" parameterType="org.apache.linkis.configuration.entity.AcrossClusterRule">
        UPDATE
            `linkis_cg_lm_across_cluster_rule` acr
        SET
            acr.cluster_name = #{acrossClusterRule.clusterName}, acr.creator = #{acrossClusterRule.creator},
            acr.user=#{acrossClusterRule.user}, acr.create_time=#{acrossClusterRule.createTime},
            acr.create_By=#{acrossClusterRule.createBy}, acr.update_time=#{acrossClusterRule.updateTime},
            acr.update_BY=#{acrossClusterRule.updateBy}, acr.rules=#{acrossClusterRule.rules}
        WHERE
            acr.id = #{acrossClusterRule.id}
    </update>


</mapper>